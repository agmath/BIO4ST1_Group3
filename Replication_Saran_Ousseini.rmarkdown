---
title: "Group 3 project"
author: "Saran Ousseini"
format: html
execute:
  keep-md: true
---

```{r setup, include = FALSE}
#Load in any packages you need
library(tidyverse)

#Read in any data

```


## Challenge 1


```{r}

nucleotide <- c("A", "C", "T", "G")

nucleotide
```

```{r}
numNucleotide <- 15

randGenome <- sample(nucleotide, size = numNucleotide, replace = TRUE)

randGenome
```


Challenge 2


```{r}
paste(randGenome, collapse = "")
```


## Challenge 3


```{r}
set.seed(200)
genomeLength <- 1500

randGenome <- sample(nucleotide, size = genomeLength, replace = TRUE)

randGenome <- paste(randGenome, collapse = "")
randGenome 
```


## Challenge 4


```{r}
set.seed(215)
genomeLength <- 100

randGenome <- sample(nucleotide, size = genomeLength, replace = TRUE)

randGenome <- paste(randGenome, collapse = "")
randGenome 
```


I counted 23 Adenine (A)


```{r}
mySum <- 0

for(i in 1:10){
  mySum <- mySum + i
  print(mySum)
}
```


## Challenge 5


```{r}
myProduct <- 1

for (j in 1:15) {
 myProduct <- myProduct + j
 print(myProduct)
}
```


## Challenge 6


```{r}
nucleotides <- c("A", "C", "G", "T")
genomeLength <- 10

randGenome <- paste(
  sample(nucleotides, size = genomeLength, replace = TRUE),
                   collapse = "")
print(randGenome)
```


## Challenge 7


```{r}
for(i in 0:nchar(randGenome)){
  if(str_sub(randGenome, start = i, end = i) == "A"){
    print(str_sub(randGenome, start = i, end = i))
  }
}
```


## Challenge 8


```{r}
vib_c <- scan("/Users/saranousseini/Desktop/VibrioCholerae.txt", what = "character", sep = NULL)

#vib_c
```


## Challenge 9


```{r}
CountA <- 0
CountT <- 0
CountC <- 0
CountG <- 0

for(i in 0:nchar(randGenome)){
  if(str_sub(randGenome, start = i, end = i) == "A"){
    CountA <- CountA + 1}
  
  if(str_sub(randGenome, start = i, end = i) == "T"){
    CountT <- CountT + 1}
  if(str_sub(randGenome, start = i, end = i) == "C"){
   CountC <- CountC + 1}
  if(str_sub(randGenome, start = i, end = i) == "G"){
    CountG <- CountG + 1}  
}
print(c(CountA, CountT, CountC, CountG))
```


## Challenge 10


```{r}
CountA <- 0
CountT <- 0
CountC <- 0
CountG <- 0

for(i in 0:nchar(vib_c)){
  if(str_sub(vib_c, start = i, end = i) == "A"){
    CountA <- CountA + 1}
  
  if(str_sub(vib_c, start = i, end = i) == "T"){
    CountT <- CountT + 1}
  if(str_sub(vib_c, start = i, end = i) == "C"){
   CountC <- CountC + 1}
  if(str_sub(vib_c, start = i, end = i) == "G"){
    CountG <- CountG + 1}  
}
print(c(CountA, CountT, CountC, CountG))

```


# Replication0rigin_PartI


```{r}
nucleotide_frequency <- function(genomeString, nucleotide = "A"){
  count <- 0
  for(i in 1:nchar(genomeString)){
    if(str_sub(genomeString, start = i, end = i) == nucleotide){
      count <- count + 1
    }
  }
  return(count)
}

nucleotide_frequency("ACTTGCGGGTATCGAG", "G")
```


## Challenge 1


```{r}
nucleotide <- c("A", "C", "T", "G")

nucleotide
set.seed(200)
genomeLength <- 2000

randGenome <- sample(nucleotide, size = genomeLength, replace = TRUE)

randGenome <- paste(randGenome, collapse = "")
randGenome 


nucleotide_frequency(randGenome, "C")
```


## Challenge 2


```{r}
randGenome <- function(k){
  nucleotide <- c("A", "C", "T","G")
randGenome <- sample(nucleotide, size = k, replace = TRUE)

randGenome <- paste(randGenome, collapse = "")
randGenome 

  return(randGenome)
}

randGenome(5)
```

```{r}
myString <- randGenome

str_sub(randGenome(), start = 1, end = 2)
```

```{r}
generate_2_mers <- function(myString) {
  list_2_mers <- c()

  for(i in 1:(nchar(myString) - 1)){
  list_2_mers <- list_2_mers %>%
  append(str_sub(myString, start = i, end = i + 1))
    }
  return(list_2_mers)
}

generate_2_mers(randGenome())
```


## Challenge 3


```{r}

```

